// Generated by view binder compiler. Do not edit!
package com.google.mlkit.md.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.mlkit.md.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InputNutritionInfoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText inputNutritionCarbohydrate;

  @NonNull
  public final Button inputNutritionConfirmedBtn;

  @NonNull
  public final EditText inputNutritionEnergy;

  @NonNull
  public final EditText inputNutritionItem;

  @NonNull
  public final TextView inputNutritionItemLabel;

  @NonNull
  public final EditText inputNutritionLipid;

  @NonNull
  public final EditText inputNutritionNA;

  @NonNull
  public final EditText inputNutritionProtein;

  @NonNull
  public final EditText inputNutritionSaLipid;

  @NonNull
  public final EditText inputNutritionSugar;

  @NonNull
  public final EditText inputNutritionTransLipid;

  private InputNutritionInfoBinding(@NonNull LinearLayout rootView,
      @NonNull EditText inputNutritionCarbohydrate, @NonNull Button inputNutritionConfirmedBtn,
      @NonNull EditText inputNutritionEnergy, @NonNull EditText inputNutritionItem,
      @NonNull TextView inputNutritionItemLabel, @NonNull EditText inputNutritionLipid,
      @NonNull EditText inputNutritionNA, @NonNull EditText inputNutritionProtein,
      @NonNull EditText inputNutritionSaLipid, @NonNull EditText inputNutritionSugar,
      @NonNull EditText inputNutritionTransLipid) {
    this.rootView = rootView;
    this.inputNutritionCarbohydrate = inputNutritionCarbohydrate;
    this.inputNutritionConfirmedBtn = inputNutritionConfirmedBtn;
    this.inputNutritionEnergy = inputNutritionEnergy;
    this.inputNutritionItem = inputNutritionItem;
    this.inputNutritionItemLabel = inputNutritionItemLabel;
    this.inputNutritionLipid = inputNutritionLipid;
    this.inputNutritionNA = inputNutritionNA;
    this.inputNutritionProtein = inputNutritionProtein;
    this.inputNutritionSaLipid = inputNutritionSaLipid;
    this.inputNutritionSugar = inputNutritionSugar;
    this.inputNutritionTransLipid = inputNutritionTransLipid;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InputNutritionInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InputNutritionInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.input_nutrition_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InputNutritionInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.input_nutrition_carbohydrate;
      EditText inputNutritionCarbohydrate = rootView.findViewById(id);
      if (inputNutritionCarbohydrate == null) {
        break missingId;
      }

      id = R.id.input_nutrition_confirmed_btn;
      Button inputNutritionConfirmedBtn = rootView.findViewById(id);
      if (inputNutritionConfirmedBtn == null) {
        break missingId;
      }

      id = R.id.input_nutrition_energy;
      EditText inputNutritionEnergy = rootView.findViewById(id);
      if (inputNutritionEnergy == null) {
        break missingId;
      }

      id = R.id.input_nutrition_item;
      EditText inputNutritionItem = rootView.findViewById(id);
      if (inputNutritionItem == null) {
        break missingId;
      }

      id = R.id.input_nutrition_item_label;
      TextView inputNutritionItemLabel = rootView.findViewById(id);
      if (inputNutritionItemLabel == null) {
        break missingId;
      }

      id = R.id.input_nutrition_lipid;
      EditText inputNutritionLipid = rootView.findViewById(id);
      if (inputNutritionLipid == null) {
        break missingId;
      }

      id = R.id.input_nutrition_NA;
      EditText inputNutritionNA = rootView.findViewById(id);
      if (inputNutritionNA == null) {
        break missingId;
      }

      id = R.id.input_nutrition_protein;
      EditText inputNutritionProtein = rootView.findViewById(id);
      if (inputNutritionProtein == null) {
        break missingId;
      }

      id = R.id.input_nutrition_sa_lipid;
      EditText inputNutritionSaLipid = rootView.findViewById(id);
      if (inputNutritionSaLipid == null) {
        break missingId;
      }

      id = R.id.input_nutrition_sugar;
      EditText inputNutritionSugar = rootView.findViewById(id);
      if (inputNutritionSugar == null) {
        break missingId;
      }

      id = R.id.input_nutrition_trans_lipid;
      EditText inputNutritionTransLipid = rootView.findViewById(id);
      if (inputNutritionTransLipid == null) {
        break missingId;
      }

      return new InputNutritionInfoBinding((LinearLayout) rootView, inputNutritionCarbohydrate,
          inputNutritionConfirmedBtn, inputNutritionEnergy, inputNutritionItem,
          inputNutritionItemLabel, inputNutritionLipid, inputNutritionNA, inputNutritionProtein,
          inputNutritionSaLipid, inputNutritionSugar, inputNutritionTransLipid);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
