// Generated by view binder compiler. Do not edit!
package com.google.mlkit.md.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.mlkit.md.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ClassifierBottomSheetBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton classifierBtnConfirm;

  @NonNull
  public final MaterialButton classifierBtnNutritionInput;

  @NonNull
  public final ImageView classifierCardviewImage;

  @NonNull
  public final CardView classifierFieldContainer;

  @NonNull
  public final TextView classifierLabel;

  private ClassifierBottomSheetBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton classifierBtnConfirm,
      @NonNull MaterialButton classifierBtnNutritionInput,
      @NonNull ImageView classifierCardviewImage, @NonNull CardView classifierFieldContainer,
      @NonNull TextView classifierLabel) {
    this.rootView = rootView;
    this.classifierBtnConfirm = classifierBtnConfirm;
    this.classifierBtnNutritionInput = classifierBtnNutritionInput;
    this.classifierCardviewImage = classifierCardviewImage;
    this.classifierFieldContainer = classifierFieldContainer;
    this.classifierLabel = classifierLabel;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ClassifierBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ClassifierBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.classifier_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ClassifierBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.classifier_btn_confirm;
      MaterialButton classifierBtnConfirm = rootView.findViewById(id);
      if (classifierBtnConfirm == null) {
        break missingId;
      }

      id = R.id.classifier_btn_nutrition_input;
      MaterialButton classifierBtnNutritionInput = rootView.findViewById(id);
      if (classifierBtnNutritionInput == null) {
        break missingId;
      }

      id = R.id.classifier_cardview_image;
      ImageView classifierCardviewImage = rootView.findViewById(id);
      if (classifierCardviewImage == null) {
        break missingId;
      }

      id = R.id.classifier_field_container;
      CardView classifierFieldContainer = rootView.findViewById(id);
      if (classifierFieldContainer == null) {
        break missingId;
      }

      id = R.id.classifier_label;
      TextView classifierLabel = rootView.findViewById(id);
      if (classifierLabel == null) {
        break missingId;
      }

      return new ClassifierBottomSheetBinding((LinearLayout) rootView, classifierBtnConfirm,
          classifierBtnNutritionInput, classifierCardviewImage, classifierFieldContainer,
          classifierLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
