// Generated by view binder compiler. Do not edit!
package com.google.mlkit.md.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.mlkit.md.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView productImage;

  @NonNull
  public final TextView productSubtitle;

  @NonNull
  public final TextView productTitle;

  private ProductItemBinding(@NonNull RelativeLayout rootView, @NonNull ImageView productImage,
      @NonNull TextView productSubtitle, @NonNull TextView productTitle) {
    this.rootView = rootView;
    this.productImage = productImage;
    this.productSubtitle = productSubtitle;
    this.productTitle = productTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.product_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.product_image;
      ImageView productImage = rootView.findViewById(id);
      if (productImage == null) {
        break missingId;
      }

      id = R.id.product_subtitle;
      TextView productSubtitle = rootView.findViewById(id);
      if (productSubtitle == null) {
        break missingId;
      }

      id = R.id.product_title;
      TextView productTitle = rootView.findViewById(id);
      if (productTitle == null) {
        break missingId;
      }

      return new ProductItemBinding((RelativeLayout) rootView, productImage, productSubtitle,
          productTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
